/*
 * NetBeansGUIView.java
 */

package gui;

import gcom.interfaces.*;
import gcom.Debug;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.ConnectException;
import java.rmi.RemoteException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class NetBeansGUIView extends FrameView {
	private DateFormat timeStampFormatter = new SimpleDateFormat("[HH:mm:ss] ");
	// TODO: This should be moved to a controller
	private GCom gcom = new gcom.GCom();
	private boolean connectedToRegistry = false;

	public DateFormat getTimeStampFormatter() {
		return timeStampFormatter;
	}

	public void appendLog(String s) {
		jTextArea1.setText(
				jTextArea1.getText() + timeStampFormatter.format(new Date()) +
				s + "\n");
	}

	private boolean isConnected() {
		return statusConnectedLabel.isEnabled();
	}

	public NetBeansGUIView(SingleFrameApplication app) {
		super(app);

		initComponents();

		statusMessageLabel.setText(gcom.getProcessID());

		// status bar initialization - message timeout, idle icon and busy animation, etc
		ResourceMap resourceMap = getResourceMap();
		int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
		messageTimer = new Timer(messageTimeout, new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				statusMessageLabel.setText("");
			}
		});
		messageTimer.setRepeats(false);
		int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
		for (int i = 0; i < busyIcons.length; i++) {
			busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
		}
		busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
				statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
			}
		});
		idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
		statusAnimationLabel.setIcon(idleIcon);
		progressBar.setVisible(false);

		// connecting action tasks to status bar via TaskMonitor
		TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
		taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
			@Override
			public void propertyChange(java.beans.PropertyChangeEvent evt) {
				String propertyName = evt.getPropertyName();
				if ("started".equals(propertyName)) {
					if (!busyIconTimer.isRunning()) {
						statusAnimationLabel.setIcon(busyIcons[0]);
						busyIconIndex = 0;
						busyIconTimer.start();
					}
					progressBar.setVisible(true);
					progressBar.setIndeterminate(true);
				} else if ("done".equals(propertyName)) {
					busyIconTimer.stop();
					statusAnimationLabel.setIcon(idleIcon);
					progressBar.setVisible(false);
					progressBar.setValue(0);
				} else if ("message".equals(propertyName)) {
					String text = (String)(evt.getNewValue());
					statusMessageLabel.setText((text == null) ? "" : text);
					messageTimer.restart();
				} else if ("progress".equals(propertyName)) {
					int value = (Integer)(evt.getNewValue());
					progressBar.setVisible(true);
					progressBar.setIndeterminate(false);
					progressBar.setValue(value);
				}
			}
		});
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        connectRMIMenuItem = new javax.swing.JMenuItem();
        joinGroupMenuItem = new javax.swing.JMenuItem();
        createGroupMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        viewToolBarMenuItem = new javax.swing.JCheckBoxMenuItem();
        statusPanel = new javax.swing.JPanel();
        statusMessageLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        statusAnimationLabel = new javax.swing.JLabel();
        statusConnectedLabel = new javax.swing.JLabel();
        connectRMIDialog = new javax.swing.JDialog();
        connectToRMIButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rmiAddressField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rmiPortField = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        joinGroupDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        joinNickField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList();
        joinGroupButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        toolBar = new javax.swing.JToolBar();
        showRMIDialogButton = new javax.swing.JButton();
        createGroupButton = new javax.swing.JButton();
        showJoinDialogToolbarButton = new javax.swing.JButton();
        createGroupDialog = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        groupNameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        createNickField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        groupType = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        castType = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        orderType = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSplitPane2 = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();

        mainPanel.setMinimumSize(new java.awt.Dimension(300, 200));
        mainPanel.setName("mainPanel"); // NOI18N

        tabbedPane.setName("tabbedPane"); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gui.NetBeansGUIApp.class).getContext().getResourceMap(NetBeansGUIView.class);
        jTextArea1.setFont(resourceMap.getFont("font.monospaced")); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(resourceMap.getString("jTextArea1.text")); // NOI18N
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        tabbedPane.addTab(resourceMap.getString("jScrollPane1.TabConstraints.tabTitle"), jScrollPane1); // NOI18N

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(tabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .add(0, 0, 0))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanelLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(tabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .add(0, 0, 0))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(gui.NetBeansGUIApp.class).getContext().getActionMap(NetBeansGUIView.class, this);
        connectRMIMenuItem.setAction(actionMap.get("showRMIConnectDialog")); // NOI18N
        connectRMIMenuItem.setText(resourceMap.getString("connectRMIMenuItem.text")); // NOI18N
        connectRMIMenuItem.setName("connectRMIMenuItem"); // NOI18N
        fileMenu.add(connectRMIMenuItem);

        joinGroupMenuItem.setAction(actionMap.get("showJoinDialog")); // NOI18N
        joinGroupMenuItem.setText(resourceMap.getString("joinGroupMenuItem.text")); // NOI18N
        joinGroupMenuItem.setName("joinGroupMenuItem"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, statusConnectedLabel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), joinGroupMenuItem, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fileMenu.add(joinGroupMenuItem);

        createGroupMenuItem.setAction(actionMap.get("showCreateGroupDialog")); // NOI18N
        createGroupMenuItem.setText(resourceMap.getString("createGroupMenuItem.text")); // NOI18N
        createGroupMenuItem.setName("createGroupMenuItem"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, statusConnectedLabel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), createGroupMenuItem, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fileMenu.add(createGroupMenuItem);

        jSeparator1.setName("jSeparator1"); // NOI18N
        fileMenu.add(jSeparator1);

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        viewMenu.setText(resourceMap.getString("viewMenu.text")); // NOI18N
        viewMenu.setName("viewMenu"); // NOI18N

        viewToolBarMenuItem.setAction(actionMap.get("toggleToolbar")); // NOI18N
        viewToolBarMenuItem.setText(resourceMap.getString("viewToolBarMenuItem.text")); // NOI18N
        viewToolBarMenuItem.setName("viewToolBarMenuItem"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, toolBar, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), viewToolBarMenuItem, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        viewMenu.add(viewToolBarMenuItem);

        menuBar.add(viewMenu);

        statusPanel.setName("statusPanel"); // NOI18N
        statusPanel.setPreferredSize(new java.awt.Dimension(548, 20));

        statusMessageLabel.setText(resourceMap.getString("statusMessageLabel.text")); // NOI18N
        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        statusAnimationLabel.setText(resourceMap.getString("statusAnimationLabel.text")); // NOI18N
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        statusConnectedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusConnectedLabel.setIcon(resourceMap.getIcon("statusConnectedLabel.icon")); // NOI18N
        statusConnectedLabel.setText(resourceMap.getString("statusConnectedLabel.text")); // NOI18N
        statusConnectedLabel.setDisabledIcon(resourceMap.getIcon("statusConnectedLabel.disabledIcon")); // NOI18N
        statusConnectedLabel.setEnabled(false);
        statusConnectedLabel.setName("statusConnectedLabel"); // NOI18N

        org.jdesktop.layout.GroupLayout statusPanelLayout = new org.jdesktop.layout.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, statusPanelLayout.createSequentialGroup()
                .addContainerGap(365, Short.MAX_VALUE)
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(statusAnimationLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(statusConnectedLabel)
                .add(14, 14, 14))
            .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(statusPanelLayout.createSequentialGroup()
                    .add(2, 2, 2)
                    .add(statusMessageLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(244, Short.MAX_VALUE)))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(statusPanelLayout.createSequentialGroup()
                .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(statusAnimationLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                        .add(statusConnectedLabel))
                    .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .add(statusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(statusPanelLayout.createSequentialGroup()
                    .add(statusMessageLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        statusMessageLabel.getAccessibleContext().setAccessibleName(resourceMap.getString("statusMessageLabel.AccessibleContext.accessibleName")); // NOI18N

        connectRMIDialog.setTitle(resourceMap.getString("connectRMIDialog.title")); // NOI18N
        connectRMIDialog.setAlwaysOnTop(true);
        connectRMIDialog.setName("connectRMIDialog"); // NOI18N
        connectRMIDialog.setResizable(false);

        connectToRMIButton.setAction(actionMap.get("connectRMIRegistry")); // NOI18N
        connectToRMIButton.setText(resourceMap.getString("connectToRMIButton.text")); // NOI18N
        connectToRMIButton.setName("connectToRMIButton"); // NOI18N
        connectToRMIButton.setSelected(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setLabelFor(rmiAddressField);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        rmiAddressField.setText(resourceMap.getString("rmiAddressField.text")); // NOI18N
        rmiAddressField.setToolTipText("The address for a public accessable RMI-registry"); // NOI18N
        rmiAddressField.setName("rmiAddressField"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setLabelFor(rmiPortField);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        rmiPortField.setText(resourceMap.getString("rmiPortField.text")); // NOI18N
        rmiPortField.setToolTipText("The port which the registry is listening on. The standard is 1099."); // NOI18N
        rmiPortField.setName("rmiPortField"); // NOI18N

        jButton5.setLabel(resourceMap.getString("jButton5.label")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        org.jdesktop.layout.GroupLayout connectRMIDialogLayout = new org.jdesktop.layout.GroupLayout(connectRMIDialog.getContentPane());
        connectRMIDialog.getContentPane().setLayout(connectRMIDialogLayout);
        connectRMIDialogLayout.setHorizontalGroup(
            connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(connectRMIDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(connectRMIDialogLayout.createSequentialGroup()
                        .add(jButton5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(connectToRMIButton))
                    .add(connectRMIDialogLayout.createSequentialGroup()
                        .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(rmiPortField)
                            .add(rmiAddressField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))))
                .addContainerGap())
        );
        connectRMIDialogLayout.setVerticalGroup(
            connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(connectRMIDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(rmiAddressField))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(rmiPortField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(connectRMIDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(connectToRMIButton)
                    .add(jButton5))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        joinGroupDialog.setTitle(resourceMap.getString("joinGroupDialog.title")); // NOI18N
        joinGroupDialog.setAlwaysOnTop(true);
        joinGroupDialog.setName("joinGroupDialog"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setLabelFor(joinNickField);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        joinNickField.setText(resourceMap.getString("joinNickField.text")); // NOI18N
        joinNickField.setName("joinNickField"); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setLabelFor(groupList);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        groupList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        groupList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        groupList.setName("groupList"); // NOI18N
        jScrollPane4.setViewportView(groupList);

        joinGroupButton.setAction(actionMap.get("joinGroup")); // NOI18N
        joinGroupButton.setText(resourceMap.getString("joinGroupButton.text")); // NOI18N
        joinGroupButton.setName("joinGroupButton"); // NOI18N
        joinGroupButton.setSelected(true);

        jButton6.setLabel(resourceMap.getString("jButton6.label")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N

        org.jdesktop.layout.GroupLayout joinGroupDialogLayout = new org.jdesktop.layout.GroupLayout(joinGroupDialog.getContentPane());
        joinGroupDialog.getContentPane().setLayout(joinGroupDialogLayout);
        joinGroupDialogLayout.setHorizontalGroup(
            joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(joinGroupDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, joinGroupDialogLayout.createSequentialGroup()
                        .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .add(joinNickField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, joinGroupDialogLayout.createSequentialGroup()
                        .add(jButton6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(joinGroupButton)))
                .addContainerGap())
        );
        joinGroupDialogLayout.setVerticalGroup(
            joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(joinGroupDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(joinNickField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(joinGroupDialogLayout.createSequentialGroup()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(joinGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(joinGroupButton)
                            .add(jButton6)))
                    .add(jLabel4))
                .addContainerGap())
        );

        toolBar.setFloatable(false);
        toolBar.setBorderPainted(false);
        toolBar.setName("toolBar"); // NOI18N

        showRMIDialogButton.setAction(actionMap.get("showRMIConnectDialog")); // NOI18N
        showRMIDialogButton.setIcon(resourceMap.getIcon("connect.icon")); // NOI18N
        showRMIDialogButton.setText(resourceMap.getString("showRMIDialogButton.text")); // NOI18N
        showRMIDialogButton.setToolTipText(resourceMap.getString("showRMIDialogButton.toolTipText")); // NOI18N
        showRMIDialogButton.setBorderPainted(false);
        showRMIDialogButton.setFocusable(false);
        showRMIDialogButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        showRMIDialogButton.setName("showRMIDialogButton"); // NOI18N
        showRMIDialogButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(showRMIDialogButton);

        createGroupButton.setAction(actionMap.get("showCreateGroupDialog")); // NOI18N
        createGroupButton.setIcon(resourceMap.getIcon("create.icon")); // NOI18N
        createGroupButton.setText(resourceMap.getString("createGroupButton.text")); // NOI18N
        createGroupButton.setToolTipText(resourceMap.getString("createGroupButton.toolTipText")); // NOI18N
        createGroupButton.setBorderPainted(false);
        createGroupButton.setFocusable(false);
        createGroupButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        createGroupButton.setName("createGroupButton"); // NOI18N
        createGroupButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, statusConnectedLabel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), createGroupButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        toolBar.add(createGroupButton);

        showJoinDialogToolbarButton.setAction(actionMap.get("showJoinDialog")); // NOI18N
        showJoinDialogToolbarButton.setIcon(resourceMap.getIcon("join.icon")); // NOI18N
        showJoinDialogToolbarButton.setText(resourceMap.getString("showJoinDialogToolbarButton.text")); // NOI18N
        showJoinDialogToolbarButton.setToolTipText(resourceMap.getString("showJoinDialogToolbarButton.toolTipText")); // NOI18N
        showJoinDialogToolbarButton.setBorderPainted(false);
        showJoinDialogToolbarButton.setFocusable(false);
        showJoinDialogToolbarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        showJoinDialogToolbarButton.setName("showJoinDialogToolbarButton"); // NOI18N
        showJoinDialogToolbarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, statusConnectedLabel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), showJoinDialogToolbarButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        toolBar.add(showJoinDialogToolbarButton);

        createGroupDialog.setName("createGroupDialog"); // NOI18N
        createGroupDialog.setResizable(false);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setLabelFor(groupNameField);
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        groupNameField.setText(resourceMap.getString("groupNameField.text")); // NOI18N
        groupNameField.setName("groupNameField"); // NOI18N

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setLabelFor(createNickField);
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        createNickField.setText(resourceMap.getString("createNickField.text")); // NOI18N
        createNickField.setName("createNickField"); // NOI18N

        jButton3.setAction(actionMap.get("createGroup")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.setSelected(true);

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N

        groupType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dynamic", "Static" }));
        groupType.setName("groupType"); // NOI18N

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        castType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Basic", "Reliable" }));
        castType.setName("castType"); // NOI18N

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        orderType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NONORDERED", "FIFO", "CAUSAL", "TOTAL", "CAUSALTOTAL" }));
        orderType.setName("orderType"); // NOI18N

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        org.jdesktop.layout.GroupLayout createGroupDialogLayout = new org.jdesktop.layout.GroupLayout(createGroupDialog.getContentPane());
        createGroupDialog.getContentPane().setLayout(createGroupDialogLayout);
        createGroupDialogLayout.setHorizontalGroup(
            createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, createGroupDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .add(createGroupDialogLayout.createSequentialGroup()
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, createGroupDialogLayout.createSequentialGroup()
                        .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, createNickField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .add(castType, 0, 193, Short.MAX_VALUE)
                            .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, groupType, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, groupNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                            .add(orderType, 0, 193, Short.MAX_VALUE))))
                .addContainerGap())
        );
        createGroupDialogLayout.setVerticalGroup(
            createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(createGroupDialogLayout.createSequentialGroup()
                .addContainerGap()
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(groupNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(createNickField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(7, 7, 7)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(groupType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(castType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(orderType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                .add(createGroupDialogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton3)
                    .add(jButton4))
                .addContainerGap())
        );

        jSplitPane2.setBorder(null);
        jSplitPane2.setDividerSize(0);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setResizeWeight(1.0);
        jSplitPane2.setMinimumSize(new java.awt.Dimension(208, 160));
        jSplitPane2.setName("jSplitPane2"); // NOI18N

        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setDividerSize(2);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setLastDividerLocation(100);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(208, 140));
        jSplitPane1.setName("jSplitPane1"); // NOI18N
        jSplitPane1.setVerifyInputWhenFocusTarget(false);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(0, 23));
        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setName("jList1"); // NOI18N
        jScrollPane2.setViewportView(jList1);

        jSplitPane1.setRightComponent(jScrollPane2);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(jTextArea1.getFont());
        jTextArea2.setRows(5);
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane3.setViewportView(jTextArea2);

        jSplitPane1.setLeftComponent(jScrollPane3);

        jSplitPane2.setLeftComponent(jSplitPane1);

        jTextField1.setFont(jTextArea1.getFont());
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        jTextField1.setName("jTextField1"); // NOI18N
        jSplitPane2.setRightComponent(jTextField1);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
        setToolBar(toolBar);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

	public void showErrorDialog(java.awt.Component parent, String msg) {
		JOptionPane.showMessageDialog(parent, msg,
				"Error!",JOptionPane.ERROR_MESSAGE);
	}

	@Action
	public void connectRMIRegistry() {
		int port = Integer.valueOf(rmiPortField.getText());
		String host = rmiAddressField.getText();
		try {
			appendLog(String.format("Connecting to registry %s:%d",
					host, port));
			gcom.connectToRegistry(host, port);
			connectRMIDialog.setVisible(false);
			statusConnectedLabel.setEnabled(true);
			statusConnectedLabel.setToolTipText(String.format("Connected to %s:%d", host,port));
		}
		catch(NumberFormatException e) {
			showErrorDialog(rmiPortField,String.format("Error: %s doesn't appear to be a valid number",rmiPortField.getText()));
			rmiPortField.requestFocusInWindow();
		}
		catch(ConnectException ex) {
			showErrorDialog(connectRMIDialog, String.format("Connection refused to %s:%d",host,port));
			Debug.log(NetBeansGUIView.class.getName(),Debug.ERROR, null, ex);
		}
		catch (IOException ex) {
			showErrorDialog(connectRMIDialog,
					String.format("Error while connecting to %s:%d",host,port));
			Debug.log(NetBeansGUIView.class.getName(),Debug.ERROR, null, ex);
		}
	}

	@Action
	public void showRMIConnectDialog() {
		connectRMIDialog.setSize(316, 137);
		rmiAddressField.requestFocusInWindow();
		connectRMIDialog.setVisible(true);
	}

	@Action
	public void showJoinDialog() {
		try {
			groupList.setListData(gcom.listReferences());
			joinGroupDialog.setSize(318,244);
			joinGroupDialog.setVisible(true);
		}
		catch(RemoteException e) {
			showErrorDialog(joinGroupDialog, "Couldn't list references in registry.");
			Debug.log(NetBeansGUIView.class.getName(),Debug.ERROR, null, e);
		}
	}

	@Action
	public void joinGroup() {
		String nickname = joinNickField.getText();
		String groupName = (String)groupList.getSelectedValue();
		if( nickname.equals("") ) {
			showErrorDialog(joinGroupDialog,
					"Error: You must supply a nickname.");
			joinNickField.requestFocusInWindow();
		}
		else if(groupName == null) {
			showErrorDialog(joinGroupDialog, "No group was chosen.");
			groupList.requestFocusInWindow();
		}
		else{
			appendLog(String.format("Joining group: %s", groupName));
			try {
				gcom.joinGroup(groupName, nickname);
				addGroup(groupName);
				joinGroupDialog.setVisible(false);
			} catch (NotBoundException ex) {
				showErrorDialog(joinGroupDialog, "No such group was found: " + groupName);
			} catch (IOException ex) {
				Logger.getLogger(NetBeansGUIView.class.getName()).log(Level.SEVERE, null, ex);
			} catch (IllegalStateException ex) {
				Logger.getLogger(NetBeansGUIView.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
	}

	@Action
	public void toggleToolbar() {
		// TODO: Set default property for this (save state between starts)
		if(toolBar.isVisible()) {
			toolBar.setVisible(false);
		}
		else {
			toolBar.setVisible(true);
		}
	}

	@Action
	public void showCreateGroupDialog() {
		//createGroupDialog.setSize(323,143);
		createGroupDialog.pack();
		createGroupDialog.setVisible(true);
	}

	private GCom.TYPE_MESSAGEORDERING getOrderingType() {
		return GCom.TYPE_MESSAGEORDERING.valueOf(
				orderType.getSelectedItem().toString()
			);
	}

	private GCom.TYPE_COMMUNICATION getCommunicationType() {
		String cast = castType.getSelectedItem().toString();
		if(cast.equals("Basic")) {
			return GCom.TYPE_COMMUNICATION.BASIC_UNRELIABLE_MULTICAST;
		}
		if(cast.equals("Reliable")) {
			return GCom.TYPE_COMMUNICATION.BASIC_RELIABLE_MULTICAST;
		}
		return null;
	}

	private GCom.TYPE_GROUP getGroupType() {
		String type = groupType.getSelectedItem().toString();
		if(type.equals("Dynamic")) {
			return GCom.TYPE_GROUP.DYNAMIC;
		}
		if(type.equals("Static")) {
			return GCom.TYPE_GROUP.STATIC;
		}
		return null;
	}

	@Action
	public void createGroup() {
		String nickName = createNickField.getText();
		String groupName = groupNameField.getText();
		if( nickName.equals("") ) {
			showErrorDialog(createGroupDialog,
					"Error: You must supply a nickname.");
			createNickField.requestFocusInWindow();
		}
		else if(groupName.equals("")) {
			showErrorDialog(createGroupDialog, "No group name was given.");
			groupNameField.requestFocusInWindow();
		}
		else{
			appendLog(String.format("Creating group: %s", groupName));
			try {
				GroupDefinition def = new gcom.GroupDefinition(groupName,getCommunicationType(),getGroupType(), getOrderingType());
				gcom.createGroup(def, nickName);
				Debug.log(NetBeansGUIView.class.getName(),Debug.DEBUG,"Created " + def);
				createGroupDialog.setVisible(false);
				addGroup(groupName);
			}
			catch (RemoteException ex) {
				// TODO: Make a proper error message
				Debug.log(NetBeansGUIView.class.getName(),Debug.ERROR, null, ex);
				showErrorDialog(createGroupDialog,"Got a remote exception");
			}
			catch (IOException ex) {
				Debug.log(NetBeansGUIView.class.getName(),Debug.ERROR, null, ex);
				showErrorDialog(createGroupDialog, "Error!");
			}
		}
	}

	private void addGroup(String name) {
		GroupPanel panel = new GroupPanel(this,name);
		gcom.addViewChangeListener(name, panel);
		gcom.addMessageListener(name, panel);
		panel.addMessageSender((MessageSender)gcom);
		tabbedPane.addTab(name,panel);
		tabbedPane.setSelectedComponent(panel);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox castType;
    private javax.swing.JButton showRMIDialogButton;
    private javax.swing.JDialog connectRMIDialog;
    private javax.swing.JMenuItem connectRMIMenuItem;
    private javax.swing.JButton createGroupButton;
    private javax.swing.JDialog createGroupDialog;
    private javax.swing.JMenuItem createGroupMenuItem;
    private javax.swing.JTextField createNickField;
    private javax.swing.JList groupList;
    private javax.swing.JTextField groupNameField;
    private javax.swing.JComboBox groupType;
    private javax.swing.JButton joinGroupButton;
    private javax.swing.JButton connectToRMIButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton showJoinDialogToolbarButton;
    private javax.swing.JDialog joinGroupDialog;
    private javax.swing.JMenuItem joinGroupMenuItem;
    private javax.swing.JTextField joinNickField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JComboBox orderType;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField rmiAddressField;
    private javax.swing.JTextField rmiPortField;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusConnectedLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JCheckBoxMenuItem viewToolBarMenuItem;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

	private final Timer messageTimer;
	private final Timer busyIconTimer;
	private final Icon idleIcon;
	private final Icon[] busyIcons = new Icon[15];
	private int busyIconIndex = 0;
}
