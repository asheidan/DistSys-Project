Static group:
	- A creates a static group "static"
	- B joins group "static"
	- B tries to send a message
	- A freezes group
	- A sends a message
	- C tries to join group "static"
	Expected:
		The first message from B should not arrive
		The message from A should arrive
		C should not be able to join the group

Dynamic group/parting leader:
	- A creates a dynamic group "dynamic"
	- B joins group "dynamic"
	- B sends a message
	- A leaves group "dynamic"
	- A rejoins group "dynamic"
	- B sends message
	Expected:
		A should find a reference and be able to join the group
		A should receive message from B
	
Reliable multicast:
	- A creates a group "reliable" with reliable multicast
	- B joins group "reliable"
	- C joins group "reliable"
	- A starts capturing messages in DebugUI
	- C sends a message to the group
	- A drops the first message
	- A releases messages
	Expected: A should receive message eventhough the first was dropped

Nonordered ordering/crashing leader:
	- A creates a non ordered group "crash"
	- B joins group "crash"
	- A captures messages
	- B sends three consecutive messages
	- A reorders the messages in holdback
	- A releases messages in holdback
	- A crashes
	- B tries to send a message
	- C tries to join group
	Expected:
		A should receive the messages reordered
		B should detect A has crashed and assume leadership
		C should be able to join group

FIFO ordering:
	- A creates a FIFO ordered group "fifo"
	- B joins group "fifo"
	- B sends an initial message
	- A captures messages
	- A sends three consecutive messages
	- A reorders the messages in holdback
	- A releases messages in holdback
	Expected: A shows messages in the same order as they were sent

Causal ordering (Tests happened before on first message from a sender):
	- A creates a Causal ordered group "causal2"
	- B joins group "causal2"
	- C joins group "causal2"
	- A sends an initial message
	- B sends an initial message
	- A captures messages
	- B sends a message
	- C sends a message
	- A rearranges the messages
	- A releases the messages in holdback
	Excpected: A gets messages in order A, B, B, C

Total ordering:
	- A creates a Totaly ordered group "total"
	- B joins group "total"
	- A sends an initial message
	- A captures messages
	- B captures messages
	- A sends a message
	- B sends a message
	- A rearranges the messages
	- A releases two messages
	- B releases two messages
	- A and B releases remaining messages
	Expected: Both A and B recieves messages in order A, B, A

Causaltotal ordering:
	- A creates a causal and totaly ordered group "ctotal"
	- B joins group "ctotal"
	- A sends an initial message
	- A captures messages
	- B captures messages
	- A sends a message
	- B sends a message
	- A rearranges the messages
	- A releases two messages
	- B releases two messages
	- A and B releases remaining messages
	Expected: Both A and B recieves messages in order A, A, B
